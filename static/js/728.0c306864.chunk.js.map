{"version":3,"file":"static/js/728.0c306864.chunk.js","mappings":"2NAEaA,EAAaC,EAAAA,GAAAA,KAAH,2DAKVC,EAAcD,EAAAA,GAAAA,MAAH,6FAMXE,EAAeF,EAAAA,GAAAA,OAAH,kEAKZG,EAAcH,EAAAA,GAAAA,MAAH,kF,mBCLT,SAASI,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAejB,OACE,SAAC,KAAD,CAAKC,gBAAiB,QAASC,aAAc,OAA7C,UACE,UAACT,EAAD,CAAYU,SAfK,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfR,GACES,EAAAA,EAAAA,IAAS,CACPC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,MAAON,EAAKI,SAASE,MAAMD,MAC3BE,SAAUP,EAAKI,SAASG,SAASF,SAGrCL,EAAKQ,OACN,EAIuCC,aAAa,MAAjD,WACE,UAACpB,EAAD,uBAEE,SAACE,EAAD,CAAamB,KAAK,OAAOP,KAAK,aAEhC,UAACd,EAAD,oBAEE,SAACE,EAAD,CAAamB,KAAK,QAAQP,KAAK,cAEjC,UAACd,EAAD,uBAEE,SAACE,EAAD,CAAamB,KAAK,WAAWP,KAAK,iBAEpC,SAACb,EAAD,CAAcoB,KAAK,SAAnB,0BAIP,CC9Cc,SAASC,IACtB,OACE,0BACE,SAACnB,EAAD,KAGL,C,mJCAGoB,GAAMC,EAAAA,EAAAA,GAAO,OACjBD,EAAIE,YAAc,MAClB,IAAIC,GAASC,EAAAA,EAAAA,IAAW,SAAiBC,EAAOC,GAC9C,IAAQC,EAAwCF,EAAxCE,KAAR,EAAgDF,EAAlCG,cAAAA,OAAd,SAAuCC,GAAvC,OAAgDJ,EAAhD,GACMK,EAASF,EAAgB,CAAEG,QAAS,OAAQC,WAAY,SAAUC,eAAgB,UAAa,GACrG,OAAuBC,EAAAA,EAAAA,KACrBd,GADwB,QAGtBM,IAAAA,EACAS,QAASR,EACTS,OAAK,kBACAN,GADA,IAEHO,WAAY,EACZjC,SAAU,KAETyB,GAGR,IACDN,EAAOD,YAAc,UACRE,EAAAA,EAAAA,IAAW,SAAiBC,EAAOC,GAC9C,IAAQC,EAAkBF,EAAlBE,KAASE,GAAjB,OAA0BJ,EAA1B,GACA,OAAuBS,EAAAA,EAAAA,KAAIX,GAAD,QAAWI,KAAAA,EAAMD,IAAAA,EAAK,aAAc,UAAaG,GAC5E,IACMP,YAAc,Q","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.js","../node_modules/@chakra-ui/layout/src/box.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  width: 320px;\n  padding: 20px;\n`;\n\nexport const LabelStyled = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 18px;\n`;\n\nexport const ButtonStyled = styled.button`\n  padding: 3px 13px;\n  cursor: pointer;\n`;\n\nexport const InputStyled = styled.input`\n  margin-top: 5px;\n  padding: 3px 7px;\n  width: 190px;\n`;\n","import React from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\n\nimport {\n  ButtonStyled,\n  FormStyled,\n  InputStyled,\n  LabelStyled,\n} from './RegisterForm.styled';\nimport { Box } from '@chakra-ui/react';\n\nexport default function RegisterForm() {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <Box backgroundColor={'white'} borderRadius={'10px'}>\n      <FormStyled onSubmit={handleSubmit} autoComplete=\"off\">\n        <LabelStyled>\n          Username\n          <InputStyled type=\"text\" name=\"name\" />\n        </LabelStyled>\n        <LabelStyled>\n          Email\n          <InputStyled type=\"email\" name=\"email\" />\n        </LabelStyled>\n        <LabelStyled>\n          Password\n          <InputStyled type=\"password\" name=\"password\" />\n        </LabelStyled>\n        <ButtonStyled type=\"submit\">Register</ButtonStyled>\n      </FormStyled>\n    </Box>\n  );\n}\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <RegisterForm />\n    </div>\n  );\n}\n","import {\n  chakra,\n  forwardRef,\n  SystemStyleObject,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\n\nexport interface BoxProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * Box is the most abstract component on top of which other chakra\n * components are built. It renders a `div` element by default.\n *\n * @see Docs https://chakra-ui.com/box\n */\nexport const Box = chakra(\"div\")\n\nBox.displayName = \"Box\"\n\n/**\n * As a constraint, you can't pass size related props\n * Only `size` would be allowed\n */\ntype Omitted = \"size\" | \"boxSize\" | \"width\" | \"height\" | \"w\" | \"h\"\n\nexport interface SquareProps extends Omit<BoxProps, Omitted> {\n  /**\n   * The size (width and height) of the square\n   */\n  size?: BoxProps[\"width\"]\n  /**\n   * If `true`, the content will be centered in the square\n   *\n   * @default false\n   */\n  centerContent?: boolean\n}\n\nexport const Square = forwardRef<SquareProps, \"div\">(function Square(\n  props,\n  ref,\n) {\n  const { size, centerContent = true, ...rest } = props\n\n  const styles: SystemStyleObject = centerContent\n    ? { display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }\n    : {}\n\n  return (\n    <Box\n      ref={ref}\n      boxSize={size}\n      __css={{\n        ...styles,\n        flexShrink: 0,\n        flexGrow: 0,\n      }}\n      {...rest}\n    />\n  )\n})\n\nSquare.displayName = \"Square\"\n\nexport const Circle = forwardRef<SquareProps, \"div\">(function Circle(\n  props,\n  ref,\n) {\n  const { size, ...rest } = props\n  return <Square size={size} ref={ref} borderRadius=\"9999px\" {...rest} />\n})\n\nCircle.displayName = \"Circle\"\n"],"names":["FormStyled","styled","LabelStyled","ButtonStyled","InputStyled","RegisterForm","dispatch","useDispatch","backgroundColor","borderRadius","onSubmit","e","preventDefault","form","currentTarget","register","name","elements","value","email","password","reset","autoComplete","type","Register","displayName","chakra","Square","props","forwardRef","size","centerContent","rest","styles","display","alignItems","justifyContent","boxSize","__css","Box","flexShrink","flexGrow","Circle"],"sourceRoot":""}